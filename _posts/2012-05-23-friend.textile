---
layout: post
title: "Friend"
description: ""
category: SGZ_SERVER
tags: [friend]
---
{% include JB/setup %}

h2. 好友系统

***
h3. 关于案子
* 听众=粉丝吗？Yes
* [-黑名单记录在缓存-]，服务器[-不-]需要记录？
* 好友数量的没有上限？--暂定100
    ** *如何控制分类数量？如好友100个，粉丝100个，黑名单50个，最近联系人20个*
* 地图信息，所在地图还是所能到达的最高等级地图？--目前用最高等级地图
* *这个案子要做聊天和留言吗？*--先不做

***
h3. 关于实现

h4. 数据库表cq_friend

pre. 
* id - UINT PK
* user_id - UINT
* friend_id - UINT
* frd_type - UINT
* friend_role_type - UINT    职业+性别     
* friend_map_lev - UINT
* friend_name - varchar(32)

h4. 对象类型

pre. 
enum FRIENDTYPE
{
    FRIENDTYPE_FRIEND               = 0x1,  //好友
    FRIENDTYPE_FANS                 = 0x2,  //听众
    FRIENDTYPE_BLACKLIST            = 0x4,  //黑名单
    FRIENDTYPE_LASTCONTACTER        = 0x8,  //最近联系人
    FRIENDTYPE_BEBLACKED            = 0x10, //被加入黑名单
    FRIRNDTYPE_ALL                  = 0xFF, //以上所有
}；

* 好友(friend): 
    ** 登录时
        *** 登陆步骤第3步，下发客户端[1]
        *** 通知粉丝、最近联系人本人上线[2]
        *** 通知黑名单本人上线
    ** 添加[3]
        *** 添加一条[@user_id = idUser, friend_id = idFrd, type = FRIENDTYPE_FRIEND@]的记录
        *** 同时还要添加一条[@user_id = idFrd, friend_id = idUser, type = FRIENDTYPE_FANS@]的记录
    ** 删除[4]
        *** 删除添加时的两条记录
    ** 查询信息[5]
        *** [*离线情况先不做，预留空间*]
        *** 通过消息NAMEACT_QueryPlayerInfo
    ** 下线时
        *** 写库
        *** 通告粉丝本人下线

* 听众(fans)：
    ** 登录时[6]
        *** 下发客户端
        *** 这里不需要发通告
    ** [-添加-]
        *** 不能主动添加粉丝
    ** [-删除-]
        *** 不能主动删除粉丝
    ** 查询信息
        *** 同[5]
    
* 黑名单(black)：
    ** 登录时
        *** 同[6]
    ** 添加：
        *** 查找好友，如果是好友，则删除好友
        *** 添加黑名单
    ** 删除
        *** 删除黑名单
    ** 查询信息
        *** 同[5]
* 最近联系人
    ** 登陆时
        *** 同[6]
    ** 添加
        *** 聊天时自动添加
        *** 超过上限自动替换最长时间没有联系过的联系人
    ** [-删除：-]
        *** 无法主动删除
    ** 查询信息
        *** 同[6]
    
h4. 消息类型

*msgfriend*

pre. 
#pragma pack(push, 1)
    typedef struct
    {
        MSGHEAD_DEFINE
        UCHAR   ucAction;
        OBJID   idFriend;
        DWORD   dwFrdType;
        USHORT  usAmount;
        FriendInfo_t setInfo[1];
    } MSG_Info;
#pragma pack(pop)

*FriendInfo_t*

pre. 
#pragma pack(push, 1)
    typedef struct FriendInfoStruct
    {
        OBJID   idUser;             //玩家ID
        OBJID   idFrd;              //好友(听众)ID
        DWORD   dwFrdAType;         //好友类型
        OBJID   idFrdRoleType;      //好友的RoleType
        int     nFrdMapLev；        //好友开启的地图等级
        bool    bOnline;            //是否在线
        NAMESTR szFrdName;          //好友的名字
    } FriendInfo_t;
#pragma pack(pop)

* 新建列表 = 1
* 列表后续 = 2
* 添加好友= 3
* 删除好友 = 4
* 好友信息更新 = 5
* 添加好友失败 = 6
* 删除好友失败 = 7

* 好友上线通告 = 10
* 好友下线通告 = 11

h4. 交互流程

# *用户登陆*

pre. 
CLIENT                                                SERVER
                     Login Request
    ----------------------------------------------------> Create CUser
                                                        | Add friend-->friend set
                                                        | Add fans  -->fans set
             Send all friends info to user              | Add black -->black set
    <---------------------------------------------------| Add cntcter-->cntcter set
              Send login notify to all friends          |
    <---------------------------------------------------|
    
# *用户下线*

pre. 
CLIENT                                                SERVER
                    Logout Request
    ---------------------------------------------------->
                Send Logout Notify to all friends       |
    <---------------------------------------------------| save all friends to DB
                                                        | destroy friendset
                                                        | destroy user

# *添加好友*

pre. 
CLIENT                                                SERVER
                Add Friend Request
    ------------------------------------------------> Black?--Del blacklist record
                                                    |       --Del from blklst set
                                                    | add to user friend set
                                                    | add user a friend record
            Send Friend add to user                 | add friend a fans record
    <-----------------------------------------------| 
            Send Friend notify to Friend            |

# *添加黑名单*

pre. 
CLIENT                                              SERVER
                Add Blacklist Request
    ------------------------------------------------> Is Friend? -- Del friend
                                                    | add to user blklst set
                                                    | 
    
h3. 编码中的问题

# 广播消息的类型转换
            
            
            
            
            
            
            
            